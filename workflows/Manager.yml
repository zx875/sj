name: GetSukiSUManager(分工作流)

permissions:
  contents: write
  actions: read

on:
  workflow_call:
    inputs:
      kernelsu_variant:
        required: true
        type: string

jobs:
  get_sukisu_manager:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: 安装依赖
        run: sudo apt update && sudo apt install -y git curl jq

      - name: 设定 SukiSU 环境变量
        run: |
          if [ "${{ inputs.kernelsu_variant }}" == "SukiSU" ]; then
            echo "This is the SukiSU variant"
            git clone https://github.com/SukiSU-Ultra/SukiSU-Ultra.git
            cd SukiSU-Ultra
            KSU_GIT_VERSION=$(git rev-list --count HEAD)
            KSU_VERSION=$((10000 + KSU_GIT_VERSION + 606))
            echo "KSU_VERSION=$KSU_VERSION" >> $GITHUB_ENV
          else
            echo "Only SukiSU is supported in this workflow"
            exit 1
          fi

      - name: 添加 SukiSU
        run: |
          if [ "${{ inputs.kernelsu_variant }}" == "SukiSU" ]; then
            echo "SukiSU..."
            REPO="SukiSU-Ultra/SukiSU-Ultra"
            FILENAME="build-manager.yml"

            # 修复：移除 jq 的 -s 参数
            BUILD_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/SukiSU-Ultra/SukiSU-Ultra/actions/workflows/build-manager.yml/runs?status=success" | \
              jq -r '.workflow_runs[0].id')

            # 检查 BUILD_ID 是否有效
            if [ -z "$BUILD_ID" ] || [ "$BUILD_ID" == "null" ]; then
              echo "Error: No successful build found!"
              exit 1
            fi

            echo "BUILD_ID=$BUILD_ID"
            ARTIFACTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/$REPO/actions/runs/$BUILD_ID/artifacts")
            echo "ARTIFACTS=$ARTIFACTS"

            DOWNLOAD_URL=$(echo "$ARTIFACTS" | jq -r '.artifacts[] | select(.name == "manager") | .archive_download_url')

            # 检查 DOWNLOAD_URL 是否有效
            if [ -z "$DOWNLOAD_URL" ] || [ "$DOWNLOAD_URL" == "null" ]; then
              echo "Error: Artifact 'manager' not found!"
              exit 1
            fi

            # 下载并解压
            curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -o "SukiSU-管理器-${{ env.KSU_VERSION }}.zip" "$DOWNLOAD_URL"
            echo "Manager 文件已下载为：SukiSU-管理器-${{ env.KSU_VERSION }}.zip"
            unzip "SukiSU-管理器-${{ env.KSU_VERSION }}.zip"
          else
            echo "Only SukiSU is supported in this workflow"
            exit 1
          fi

      - name: 上传编译资产
        uses: actions/upload-artifact@v4
        with:
          name: SukiSU-Manager-${{ env.KSU_VERSION }}
          path: "*.apk"  # 根据实际解压后的文件调整
