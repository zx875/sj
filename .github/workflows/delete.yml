name: 清理所有工作流运行记录
on:
  workflow_dispatch:
    inputs:
      count:
        description: '最多清理的运行次数（每个工作流）'
        required: false
        default: '20'
      delete_failed:
        description: '删除失败的运行记录？'
        required: false
        type: boolean
        default: true
      delete_success:
        description: '删除成功的运行记录？'
        required: false
        type: boolean
        default: true
      delete_cancelled:
        description: '删除已取消的运行记录？'
        required: false
        type: boolean
        default: true
      reverse_order:
        description: '从旧到新开始清理？'
        required: false
        type: boolean
        default: false

permissions:
  actions: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: 安装 GitHub CLI 和 jq
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: 登录 GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: 清理所有工作流运行记录
        env:
          REPO: ${{ github.repository }}
          COUNT: ${{ inputs.count }}
          DELETE_FAILED: ${{ inputs.delete_failed }}
          DELETE_SUCCESS: ${{ inputs.delete_success }}
          DELETE_CANCELLED: ${{ inputs.delete_cancelled }}
          REVERSE_ORDER: ${{ inputs.reverse_order }}
        run: |
          set -e

          echo "当前仓库: $REPO"
          echo "列出所有工作流..."
          WORKFLOWS_JSON=$(gh api repos/$REPO/actions/workflows)
          echo "$WORKFLOWS_JSON" | jq -r '.workflows[] | "工作流名称: \(.name), 文件路径: \(.path), ID: \(.id)"'

          WORKFLOW_IDS=$(echo "$WORKFLOWS_JSON" | jq -r '.workflows[].id')

          for WORKFLOW_ID in $WORKFLOW_IDS; do
            echo ""
            echo "开始处理工作流 ID: $WORKFLOW_ID"

            PER_PAGE=100
            PAGE=1
            MATCHED_RUNS="[]"

            while true; do
              RESP=$(gh api "repos/$REPO/actions/workflows/$WORKFLOW_ID/runs?per_page=$PER_PAGE&page=$PAGE")
              RUNS=$(echo "$RESP" | jq '.workflow_runs')
              COUNT_THIS_PAGE=$(echo "$RUNS" | jq 'length')
              if [ "$COUNT_THIS_PAGE" -eq 0 ]; then break; fi
              MATCHED_RUNS=$(jq -s 'add' <(echo "$MATCHED_RUNS") <(echo "$RUNS"))
              PAGE=$((PAGE + 1))
            done

            echo "获取到运行记录数量: $(echo "$MATCHED_RUNS" | jq 'length')"

            # 排序
            if [[ "$REVERSE_ORDER" == "true" ]]; then
              SORTED_RUNS=$(echo "$MATCHED_RUNS" | jq 'sort_by(.run_started_at)')
            else
              SORTED_RUNS=$(echo "$MATCHED_RUNS" | jq 'sort_by(.run_started_at) | reverse')
            fi

            TO_DELETE_RUNS=$(echo "$SORTED_RUNS" | jq ".[0:${COUNT}]")

            echo "$TO_DELETE_RUNS" | jq -c '.[]' | while read run; do
              ID=$(echo "$run" | jq -r '.id')
              STATUS=$(echo "$run" | jq -r '.conclusion')
              STATE=$(echo "$run" | jq -r '.status')

              if [[ "$STATE" == "in_progress" || "$STATE" == "queued" ]]; then
                echo "跳过运行 ID $ID（状态为 $STATE）"
                continue
              fi

              if [[ "$STATUS" == "failure" && "$DELETE_FAILED" != "true" ]]; then continue; fi
              if [[ "$STATUS" == "success" && "$DELETE_SUCCESS" != "true" ]]; then continue; fi
              if [[ "$STATUS" == "cancelled" && "$DELETE_CANCELLED" != "true" ]]; then continue; fi

              echo "删除运行记录 ID: $ID（状态: $STATUS）"
              gh api -X DELETE "repos/$REPO/actions/runs/$ID" || echo "删除失败（ID: $ID）"
            done
          done
